{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.jsx"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","message","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","quote","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","data"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,kFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,gCC+D/BC,EA3DG,SAACL,GAEf,MAAoCM,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAiBC,mBACjBC,EAAeD,mBAmBrB,OACI,eAAC,WAAD,WACI,cAAC,IAAD,CACIE,KAAML,EACNM,QAAS,iBAAM,wEAEnB,cAAC,EAAD,UACI,uBACIC,QAhBW,WACvBN,GAAc,IAgBFP,UAAWC,IAAQa,KACnBC,SA3BU,SAACC,GACvBA,EAAMC,iBAEN,IAAMC,EAAgBV,EAAeW,QAAQC,MACvCC,EAAcX,EAAaS,QAAQC,MAEzCrB,EAAMuB,WAAW,CAACC,OAAQL,EAAeM,MAAOH,KAkBxC,UAKKtB,EAAM0B,WACH,qBAAKzB,UAAWC,IAAQyB,QAAxB,SACI,cAACC,EAAA,EAAD,MAIR,sBAAK3B,UAAWC,IAAQ2B,QAAxB,UACI,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKxB,OAExC,sBAAKR,UAAWC,IAAQ2B,QAAxB,UACI,uBAAOC,QAAQ,OAAf,mBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKtB,OAEtC,qBAAKV,UAAWC,IAAQiC,QAAxB,SACI,wBAAQC,QA/BE,WAC1B5B,GAAc,IA8B0CP,UAAU,MAAlD,kC,gBC7BToC,UAtBE,WAEb,MAA8BC,YAAQC,KAA/BC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OACdC,EAAUC,cAEhBC,qBAAU,WACS,cAAXH,GACAC,EAAQG,KAAK,aAElB,CAACJ,EAAQC,IAMZ,OACI,8BACI,cAAC,EAAD,CAAWhB,UAAsB,YAAXe,EAAsBlB,WAN5B,SAAAuB,GACpBN,EAAYM","file":"static/js/6.99e99367.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2lhuz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ksbs\",\"loading\":\"QuoteForm_loading__2mzM_\",\"control\":\"QuoteForm_control__2J3K6\",\"actions\":\"QuoteForm_actions__2FreP\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import {Fragment, useRef, useState} from 'react';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nimport {Prompt} from 'react-router-dom';\n\nconst QuoteForm = (props) => {\n\n    const [isEntering, setIsEntering] = useState(false);\n\n    const authorInputRef = useRef();\n    const textInputRef = useRef();\n\n    const submitFormHandler = (event) => {\n        event.preventDefault();\n\n        const enteredAuthor = authorInputRef.current.value;\n        const enteredText = textInputRef.current.value;\n\n        props.onAddQuote({author: enteredAuthor, quote: enteredText});\n    }\n\n    const formFocusedHandler = () => {\n        setIsEntering(true);\n    }\n\n    const finishEnteringHandler = () => {\n        setIsEntering(false);\n    }\n\n    return (\n        <Fragment>\n            <Prompt\n                when={isEntering}\n                message={() => 'Are you sure you want leave? All your entered data will be lost!!!'}\n            />\n            <Card>\n                <form\n                    onFocus={formFocusedHandler}\n                    className={classes.form}\n                    onSubmit={submitFormHandler}\n                >\n                    {props.isLoading && (\n                        <div className={classes.loading}>\n                            <LoadingSpinner/>\n                        </div>\n                    )}\n\n                    <div className={classes.control}>\n                        <label htmlFor='author'>Author</label>\n                        <input type='text' id='author' ref={authorInputRef}/>\n                    </div>\n                    <div className={classes.control}>\n                        <label htmlFor='text'>Quote</label>\n                        <textarea id='text' rows='5' ref={textInputRef}></textarea>\n                    </div>\n                    <div className={classes.actions}>\n                        <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n                    </div>\n                </form>\n            </Card>\n        </Fragment>\n    );\n};\n\nexport default QuoteForm;\n","import React, {useEffect} from 'react';\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport {addQuote} from \"../lib/api\";\r\n\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst NewQuote = () => {\r\n\r\n    const {sendRequest, status} = useHttp(addQuote);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (status === 'completed') {\r\n            history.push('/quotes')\r\n        }\r\n    }, [status, history]);\r\n\r\n    const addQuoteHandler = data => {\r\n        sendRequest(data)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewQuote;"],"sourceRoot":""}