{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.jsx"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","type","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuotes","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,iFCmBdC,EAhBG,SAACC,GACf,OACI,qBAAIC,UAAWC,IAAQC,KAAvB,UACI,mCACI,qCACI,4BAAIH,EAAMI,SAEd,qCAAaJ,EAAMK,YAEvB,cAAC,IAAD,CAAMC,GAAE,kBAAaN,EAAMO,IAA3B,SACI,wBAAQC,KAAK,SAASP,UAAU,MAAhC,mC,wBCsCDQ,EAlCG,SAACT,GAEf,IAbgBU,EAAQC,EAalBC,EAAUC,cACVC,EAAWC,cAIXC,EAAiD,QAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QAErCC,GApBUV,EAoBgBV,EAAMU,OApBdC,EAoBsBK,EAnBvCN,EAAOW,MAAK,SAACC,EAAQC,GACxB,OAAIZ,EACOW,EAAOf,GAAKgB,EAAOhB,GAAK,GAAK,EAE7Be,EAAOf,GAAKgB,EAAOhB,GAAK,GAAK,MAqB5C,OACI,eAAC,WAAD,WACI,qBAAKN,UAAWC,IAAQsB,QAAxB,SACI,yBAAQC,QAPS,WACzBb,EAAQc,KAAR,UAAgBZ,EAASa,SAAzB,iBAA0CX,EAAqB,OAAS,SAMhE,kBAA6CA,EAAqB,aAAe,iBAErF,oBAAIf,UAAWC,IAAQ0B,KAAvB,SACKR,EAAaS,KAAI,SAACC,GAAD,OACd,cAAC,EAAD,CAEIvB,GAAIuB,EAAMvB,GACVF,OAAQyB,EAAMzB,OACdD,KAAM0B,EAAMA,OAHPA,EAAMvB,a,yCC3BpBwB,EAXO,WACpB,OACE,sBAAK9B,UAAWC,IAAQ8B,SAAxB,UACE,iDACA,cAAC,IAAD,CAAM/B,UAAU,MAAMK,GAAG,aAAzB,6BC8BS2B,UA7BG,WAEd,MAAyDC,YAAQC,KAAc,GAAxEC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OAAcC,EAAlC,EAA4BC,KAAoBC,EAAhD,EAAgDA,MAMhD,OAJAC,qBAAU,WACNL,MACD,CAACA,IAEW,YAAXC,EAEI,qBAAKpC,UAAU,WAAf,SACI,cAACyC,EAAA,EAAD,MAKRF,EACO,mBAAGvC,UAAU,mBAAb,SAAiCuC,IAG7B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,OAKzD,cAAC,EAAD,CAAWjC,OAAQ4B,IAJZ,cAAC,EAAD","file":"static/js/5.0fbf72f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__3fqgu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__33yeh\",\"sorting\":\"QuoteList_sorting__nWog8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__1M_Q2\"};","import classes from './QuoteItem.module.css';\n\nimport {Link} from \"react-router-dom\";\n\nconst QuoteItem = (props) => {\n    return (\n        <li className={classes.item}>\n            <figure>\n                <blockquote>\n                    <p>{props.text}</p>\n                </blockquote>\n                <figcaption>{props.author}</figcaption>\n            </figure>\n            <Link to={`/quotes/${props.id}`}>\n                <button type='button' className='btn'>View Fullscreen</button>\n            </Link>\n        </li>\n    );\n};\n\nexport default QuoteItem;\n","import {Fragment} from 'react';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nimport {useHistory, useLocation} from 'react-router-dom';\n\n\nconst sortQuotes = (quotes, ascending) => {\n    return quotes.sort((quoteA, quoteB) => {\n        if (ascending) {\n            return quoteA.id > quoteB.id ? 1 : -1;\n        } else {\n            return quoteA.id < quoteB.id ? 1 : -1;\n        }\n    })\n}\n\n\nconst QuoteList = (props) => {\n\n    const history = useHistory();\n    const location = useLocation();\n\n    const queryParams = new URLSearchParams(location.search);\n\n    const isSortingAscending = queryParams.get('sort') === 'asc';\n\n    const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n    const changeSortingHandler = () => {\n        history.push(`${location.pathname}?sort=${isSortingAscending ? 'desc' : 'asc'}`);\n    }\n\n    return (\n        <Fragment>\n            <div className={classes.sorting}>\n                <button onClick={changeSortingHandler}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n            </div>\n            <ul className={classes.list}>\n                {sortedQuotes.map((quote) => (\n                    <QuoteItem\n                        key={quote.id}\n                        id={quote.id}\n                        author={quote.author}\n                        text={quote.quote}\n                    />\n                ))}\n            </ul>\n        </Fragment>\n    );\n};\n\nexport default QuoteList;\n","import classes from './NoQuotesFound.module.css';\nimport {Link} from \"react-router-dom\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import React, {useEffect} from 'react';\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport {getAllQuotes} from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\n\r\n\r\nconst AllQuotes = () => {\r\n\r\n    const {sendRequest, status, data: loadedQuotes, error} = useHttp(getAllQuotes, true);\r\n\r\n    useEffect(() => {\r\n        sendRequest();\r\n    }, [sendRequest]);\r\n\r\n    if (status === 'pending') {\r\n        return (\r\n            <div className='centered'>\r\n                <LoadingSpinner/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return <p className='centered focused'>{error}</p>\r\n    }\r\n\r\n    if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n        return <NoQuotesFound/>;\r\n    }\r\n\r\n    return (\r\n        <QuoteList quotes={loadedQuotes}/>\r\n    );\r\n};\r\n\r\nexport default AllQuotes;"],"sourceRoot":""}